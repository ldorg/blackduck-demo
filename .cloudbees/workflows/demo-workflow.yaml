apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Demo Workflow
on:
  workflow_dispatch:
jobs:
  scan:
    steps:
      - uses: https://github.com/cloudbees-io/checkout@v1
      - name: Scan with Black Duck SCA
        id: blackduck-scan
        uses: cloudbees-io/blackduck-sca-scan-dependency@v2
        with:
          server-url: ${{ vars.BLACK_DUCK_URL }}
          api-token: ${{ secrets.BLACK_DUCK_TOKEN }}
          ref: main
          project-name: "blackduck-demo"
          project-version: "1.0.0"
      - name: Report evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |
            # Scanner results
            - Critical: **${{ steps.blackduck-scan.outputs.critical-count }}**
            - Very High: **${{ steps.blackduck-scan.outputs.very-high-count }}**
            - High: **${{ steps.blackduck-scan.outputs.high-count }}**
            - Medium: **${{ steps.blackduck-scan.outputs.medium-count }}**
            - Low: **${{ steps.blackduck-scan.outputs.low-count }}**

      - name: Security gate
        if: steps.blackduck-scan.outputs.critical-count > 0
        # if: steps.blackduck-scan.outputs.critical-count > 0 || steps.blackduck-scan.outputs.very-high-count > 0
        uses: docker://alpine:3.20
        run: |
          if [ ${{ steps.blackduck-scan.outputs.critical-count }} -gt 0 ]; then 
            echo "Security gate failed due to ${{ steps.blackduck-scan.outputs.critical-count }} critical vulnerabilities"
          fi
          # if [ ${{ steps.blackduck-scan.outputs.very-high-count }} -gt 0 ]; then
          #   echo "Security gate failed due to ${{ steps.blackduck-scan.outputs.very-high-count }} very high vulnerabilities"
          # fi
          exit 1
  build:
    needs:
      - scan
    steps:
      - name: Call workflow
        id: call-workflow
        with:
          token: ${{ secrets.GHA_TOKEN }}
          org-name: ldorg
          repo-name: blackduck-demo
          branch-name: main
          workflow-name: basic
          test-type: junit
          test-result-location: "artifacts/*.xml"
        uses: cloudbees-io/ghactions-run-workflow@v2
      - name: Download GitHub artifact
        id: download-artifact
        uses: https://github.com/cloudbees-days/github-get-artifact
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          org-name: "ldorg"
          repo-name: "blackduck-demo"
          run-id: "16760154638"
          artifact-name: "build-artifacts"
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Build Artifacts

            ${{ steps.download-artifact.outputs.file-contents }}

          format: MARKDOWN
